---
layout: layouts/base.njk
showMaps: true
---

<div
    id="map">
    <!-- Bloc qui contient le niveau de zoom et le sélecteur de style -->
    <div id="control-panel">
        <div class="fr-select-group">
            <label class="fr-label" for="select">
                Fond de carte
            </label>
            <select class="fr-select" id="style-selector" name="select">
                <option value="https://betagouv.github.io/styles-de-cartes/maps/map_simplified_colored_ign.json" selected="selected">Épurée couleurs - Plan IGN</option>
                <option value="https://betagouv.github.io/styles-de-cartes/maps/map_simplified_grey_ign.json">Épurée - Plan IGN</option>
                {# <option value="https://betagouv.github.io/styles-de-cartes/maps/map_aerial_photography_ign.json">Aérienne - Ortho IGN</option> #}
                {# <option value="https://betagouv.github.io/styles-de-cartes/maps/map_simplified_osm-etalab.json">Épurée - OSM Etalab</option> #}
            </select>
        </div>
        <div id="metadata-panel">
            <p id="style-name"class="fr-text--lead fr-text--bold"></p>
            <p id="style-version"></p>
            <p id="style-owner"></p>
            <p><a id="style-url" target="_blank" class="fr-link fr-icon-arrow-right-line fr-link--icon-right">Lien vers le fichier de style</a></p>
            <p id="zoom-level"></p>
        </div>
    </div>
</div>
<script>
    // add the PMTiles plugin to the maplibregl global. setting metadata = true fills out the "attribution" field of the
    // source, and is required for some inspector applications, but requires an additional blocking HTTP request before
    // loading the map.
    let protocol = new pmtiles.Protocol({metadata: true});
    maplibregl.addProtocol("pmtiles", protocol.tile);
    // Map initialization
    const map = new maplibregl.Map({container: 'map', style: 'https://betagouv.github.io/styles-de-cartes/maps/map_simplified_colored_ign.json'});
    map.addControl(new maplibregl.NavigationControl());
    // Référence au div pour afficher le niveau de zoom
    const zoomLevelDiv = document.getElementById('zoom-level');
    // Fonction pour mettre à jour le niveau de zoom affiché
    function updateZoomLevel() {
        const zoom = map.getZoom().toFixed(2); // Obtenir le zoom actuel, arrondi à 2 décimales
        zoomLevelDiv.innerText = `Zoom : ${zoom}`;
    }
    // Mettre à jour le niveau de zoom au chargement de la carte
    map.on('load', updateZoomLevel);
    // Écouter les changements de zoom
    map.on('zoom', updateZoomLevel);
    // Sélection du menu déroulant pour changer de style
    const styleSelector = document.getElementById('style-selector');
    // Function to fetch and display style metadata
    async function displayStyleMetadata(styleUrl) {
        try {
            const response = await fetch(styleUrl);
            const styleJson = await response.json();
            
            // Update metadata display
            document.getElementById('style-name').innerText = `${styleJson.metadata.name || 'Non défini'}`;
            document.getElementById('style-version').innerText = `Version: ${styleJson.metadata.version || 'Non définie'}`;
            document.getElementById('style-owner').innerText = `Description: ${styleJson.metadata.description || 'Non défini'}`;
            document.getElementById('style-url').href = `${styleJson.metadata.url || 'Non défini'}`;
        } catch (error) {
            console.error('Erreur lors du chargement des métadonnées:', error);
        }
    }

    // Display metadata when map loads initially
    map.on('load', () => {
        updateZoomLevel();
        // displayStyleMetadata(styleSelector.value);
        displayStyleMetadata("https://betagouv.github.io/styles-de-cartes/maps/map_simplified_ign.json");
    });

    // Update metadata when style changes
    styleSelector.addEventListener('change', function () {
        const selectedStyle = styleSelector.value;
        map.setStyle(selectedStyle);
        displayStyleMetadata(selectedStyle);
    });
</script>